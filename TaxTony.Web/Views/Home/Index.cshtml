@model TaxTony.Web.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Tax Tony";
}

<form id="taxForm">
    <div class="text-center">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Let Tax Tony calculate your tax</h3>
            </div>
            <div class="card-body">
                <div class="card-block">
                    <div>
                        <div class="row p-a-1">
                            <div class="col-sm-12">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.AnnualSalary, htmlAttributes: new { @class = "control-label required col-md-4" })
                                    <div class="col-md-8">
                                        <input 
                                               id="annualSalaryInput"
                                               data-parsley-required
                                               data-parsley-type="number"
                                               data-parsley-pattern="^\d+(\.\d{2})?$"
                                               name="fname"
                                               class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.PostalCodes, htmlAttributes: new { @class = "control-label required col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.PostalCodes, Model.PostalCodes,
                                            new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <button id="calculateTaxBtn" class="btn btn-primary text-center">Calculate Tax</button>
                            </div>

                            <div class="col-sm-12" id="calculatedTaxDiv" hidden>
                                <p>Your Tax: $<span id="calculatedTax"></span></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</form>

@section Scripts {
    <script>
        const annualSalaryCtrl = $("#annualSalaryInput");
        const postalCodeCtrl = $("#postalCodeSelect");

        $(document).ready(function () {
            $('#taxForm').parsley({
                errorClass: 'is-invalid text-danger',
                successClass: 'is-valid', // Comment this option if you don't want the field to become green when valid. Recommended in Google material design to prevent too many hints for user experience. Only report when a field is wrong.
                errorsWrapper: '<span class="form-text text-danger"></span>',
                errorTemplate: '<span></span>',
            }).validate();
        })

        $('#annualSalaryInput').parsley()
            .on('field:success', function () {
                $("#calculateTaxBtn").prop('disabled', false);
            })
            .on('field:error', function () {
                $("#calculateTaxBtn").prop('disabled', true);
            });

        $("#calculateTaxBtn").on("click", function (e) {
            e.preventDefault();

            const annualSalary = annualSalaryCtrl.val();
            const postalCode = $("#PostalCodes :selected").val()

            $.ajax({
                url: "@Url.Action("CalculateTax", "Home")",
                type: "GET",
                data: {
                    annualSalary: annualSalary,
                    postalCode: postalCode
                },
                success: function (response) {
                    console.log(response);
                    $("#calculatedTax").text(response);
                },
                error: function (response) {
                    console.log(response);
                }
            })
            .always(function () {
                $("#calculatedTaxDiv").removeAttr("hidden");
            });
        })
    </script>
}
